---
version: '3.6'

services:
  traefik:
    image: traefik
    command:
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--acme"
      - "--acme.storage=/acme.json"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.onHostRule=true"
      - "--acme.onDemand=false"
      - "--acme.email=${ACME_EMAIL}"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=${DOMAINNAME}"
      - "--docker.watch"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
        #environment:
        #  - OVH_ENDPOINT=ovh-eu
        #  - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
        #  - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
        #  - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - ${USERDIR}/docker-config/dizolo/acme/acme.json:/acme.json
    networks:
      - traefik_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik_network"

#----------------------------------------------------------------
  nginx-dizolo:
    image: nginx
    volumes:
      - ${USERDIR}/nginx-dizolo:/usr/share/nginx/html:ro
    networks:
      - traefik_network 
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      replicas: 2 
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik_network"
        - "traefik.frontend.rule=Host:${DOMAINNAME}"

#----------------------------------------------------------------
  nginx-startpage:
    image: nginx
    volumes:
      - ${USERDIR}/nginx-startpage:/usr/share/nginx/html:ro
    networks:
      - traefik_network 
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      replicas: 2 
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik_network"
        - "traefik.frontend.rule=Host:start.${DOMAINNAME}"

#----------------------------------------------------------------
  emby:
    image: emby/embyserver
    volumes:
      - ${USERDIR}/emby:/config
      - /mnt/videos/Films:/movies
      - /mnt/storage/TVShows:/tvshows
      - /mnt/storage/Animes:/tvanime
      - /mnt/storage/audio/music:/music
      - /mnt/videos/Emissions:/emissions
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.port=8096"
        - "traefik.docker.network=traefik_network"
        - "traefik.frontend.rule=Host:media.${DOMAINNAME}"

#----------------------------------------------------------------
  calibre-web:
    image: linuxserver/calibre-web
    volumes:
      - ${USERDIR}/calibre-web:/config
      - /home/.data/documents/bouquins:/books
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network 
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      replicas: 2 
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
      labels:
        - "traefik.enable=true"
        - "traefik.port=8083"
        - "traefik.docker.network=traefik_network"
        - "traefik.frontend.rule=Host:books.${DOMAINNAME}"

#----------------------------------------------------------------
  freshrss:
    image: linuxserver/freshrss
    volumes:
      - ${USERDIR}/freshrss:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network 
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik_network"
        - "traefik.frontend.rule=Host:feeds.${DOMAINNAME}"
 
#----------------------------------------------------------------
#  rss-bridge:
#    image: rssbridge/rss-bridge
#    volumes:
#      - ${USERDIR}/rss-bridge/whitelist.txt:/app/public/whitelist.txt
#    networks:
#      - traefik_network 
#    labels:
#      - "traefik.enable=true"
#      - "traefik.port=3000"
#      - "traefik.docker.network=traefik_network"
#      - "traefik.frontend.rule=Host:bridge.${DOMAINNAME}"
# 
#----------------------------------------------------------------
networks:
  traefik_network:
      external: true
