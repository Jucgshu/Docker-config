---
version: '3.6'

services:
  reverse-proxy:
    image: traefik
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    command: --docker
    ports:
      - "80:80"
      - "443:443"
    environment:
      - OVH_ENDPOINT=ovh-eu
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - /opt/appdata/docker/traefik.toml:/traefik.toml
      - /opt/appdata/docker/assets/acme.json:/acme.json
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"

#----------------------------------------------------------------
  nginx-dizolo:
    image: nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /opt/appdata/nginx-dizolo:/usr/share/nginx/html:ro
    networks:
      - traefik_network 
    labels:
      - "traefik.docker.network=traefik_network"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${DOMAINNAME}"
      - "traefik.port=80"

#----------------------------------------------------------------
  nginx-startpage:
    image: nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /opt/appdata/nginx-startpage:/usr/share/nginx/html:ro
    networks:
      - traefik_network 
    labels:
      - "traefik.docker.network=traefik_network"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:search.${DOMAINNAME}"
      - "traefik.port=80"

#----------------------------------------------------------------
  emby:
    image: emby/embyserver
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /opt/appdata/emby/config:/config
      - /mnt/videos/Films:/movies
      - /mnt/storage/TVShows:/tvshows
      - /mnt/storage/Animes:/tvanime
      - /mnt/storage/audio/music:/music
      - /mnt/videos/Emissions:/emissions
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network
    labels:
      - "traefik.docker.network=traefik_network"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:media.${DOMAINNAME}"
      - "traefik.port=8096"

#----------------------------------------------------------------
  calibre-web:
    image: linuxserver/calibre-web
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /opt/appdata/calibre-web/config:/config
      - /home/.data/documents/bouquins:/books
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network 
    labels:
      - "traefik.docker.network=traefik_network"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:books.${DOMAINNAME}"
      - "traefik.port=8083"

#----------------------------------------------------------------
  freshrss:
    image: linuxserver/freshrss
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /opt/appdata/freshrss/config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Paris
    networks:
      - traefik_network 
    labels:
      - "traefik.docker.network=traefik_network"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:feeds.${DOMAINNAME}"
      - "traefik.port=80"
 
#----------------------------------------------------------------
#  rss-bridge:
#    image: rssbridge/rss-bridge
#    restart: always
#    volumes:
#      - /opt/appdata/rss-bridge/whitelist.txt:/app/public/whitelist.txt
#    expose:
#      - "3000"
#    networks:
#      - traefik_network 
#    labels:
#      - "traefik.docker.network=traefik_network"
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:bridge.${DOMAINNAME}"
#      - "traefik.port=3000"
# 
#----------------------------------------------------------------
networks:
  traefik_network:
    external: false
  default:
    driver: bridge
